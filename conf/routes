# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# TEST PAGE
GET			/test								controllers.Application.test




# AUTHENTICATION
POST		/signin							controllers.Auth.signIn
POST		/signout						controllers.Auth.signOut
POST		/signup							controllers.Auth.signUp

# USERNAMES
GET			/usernames					controllers.Users.usernames

# ACCOUNT
GET			/account						controllers.Account.info
PUT			/account						controllers.Account.update
PUT			/account/password		controllers.Account.updatePassword
DELETE	/account						controllers.Account.delete

# FOLDERS
GET			/folders						controllers.Folders.list(sort: Option[String], page: Int ?= 1, size: Int ?= 10)
POST		/folders						controllers.Folders.insert
GET			/folders/:id				controllers.Folders.info(id: Long)
PUT			/folders/:id				controllers.Folders.update(id: Long)
PUT			/folders/:id/order/:newOrder	controllers.Folders.updateOrder(id: Long, newOrder: Int)
DELETE	/folders/:id				controllers.Folders.delete(id: Long)

# TASKS
GET			/folders/:id/tasks	controllers.Tasks.list(id: Long, q: Option[String], done: Option[Boolean], sort: Option[String], page: Int ?= 1, size: Int ?= 10)
POST		/folders/:id/tasks	controllers.Tasks.insert(id: Long)
GET			/tasks/:id					controllers.Tasks.info(id: Long)
PUT			/tasks/:id					controllers.Tasks.update(id: Long)
PUT			/tasks/:id/order/:newOrder	controllers.Tasks.updateOrder(id: Long, newOrder: Int)
PUT			/tasks/:id/folder/:folder		controllers.Tasks.updateFolder(id: Long, folder: Long)
PUT			/tasks/:id/done			controllers.Tasks.updateDone(id: Long, done: Boolean = true)
DELETE	/tasks/:id/done			controllers.Tasks.updateDone(id: Long, done: Boolean = false)
DELETE	/tasks/:id					controllers.Tasks.delete(id: Long)


# Map static resources from the /public folder to the /assets URL path
GET			/assets/*file				controllers.Assets.versioned(path="/public", file: Asset)


# SHOW FAKE DB DATA
# Auxiliar to check the FakeDB information. It's only for testing purpose. You should remove it.
GET			/fakeDB							controllers.Application.fakeDB


# User RESTfull api
GET                  /api/v1/user       controllers.UserController.findPaginate(sort: String ?="FIRSTNAME",page:Int ?=1,limit:Int ?=5)
GET                  /api/v1/user       controllers.UserController.index
GET                  /api/v1/user/:id   controllers.UserController.read(id: String)
POST                 /api/v1/user       controllers.UserController.create
DELETE               /api/v1/user/:id   controllers.UserController.delete(id: String)
PATCH                /api/v1/user/:id   controllers.UserController.update(id: String)



# Translator RESTfull api

GET                 /api/v1/translators                     controllers.TranslatorController.findAll(sort: String ?="FIRSTNAME", page: Int ?= 1, size: Int ?= 3)
GET                 /api/v1/translators/:id                  controllers.TranslatorController.findById(id: String)
POST                /api/v1/translators                      controllers.TranslatorController.create
DELETE              /api/v1/translators/:id                  controllers.TranslatorController.delete(id: String)
PUT                 /api/v1/translators/:id                  controllers.TranslatorController.update(id: String)


#Hospital RESTfull
GET                 /api/v1/hospitals                       controllers.HospitalController.findAll(sort: String ?="EMAIL" ,page:Int ?= 1 , size:Int ?= 10)
GET                 /api/v1/hospitals/:id                   controllers.HospitalController.findById(id: String)
GET                 /api/v1/hospitals/:name                 controllers.HospitalController.findByName(name:String)
GET                 /api/v1/hospitals/total                 controllers.HospitalController.getTotalHospital
POST                /api/v1/hospitals                       controllers.HospitalController.create
DELETE              /api/v1/hospitals/:id                   controllers.HospitalController.delete(id: String)
PUT                 /api/v1/hospitals/:id                   controllers.HospitalController.update(id: String)


